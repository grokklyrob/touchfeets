{"version":3,"sources":["turbopack:///[project]/lib/prisma.ts","turbopack:///[project]/lib/entitlements.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/app/api/stripe/webhook/route.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\n/**\n * Prisma singleton for Next.js (avoids hot-reload multiple client instances)\n */\nexport const prisma =\n  globalThis.prisma ??\n  new PrismaClient({\n    log: [\"warn\", \"error\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") {\n  globalThis.prisma = prisma;\n}\n\nexport default prisma;","import prisma from \"@/lib/prisma\";\n\ntype PlanTier = \"FREE\" | \"BASIC_50\" | \"PLUS_200\" | \"PRO_1000\";\n\n/**\n * Quota and watermark policy per tier.\n * FREE: visible watermark required\n * Paid tiers: watermarkExempt = true (no visible overlay)\n */\nexport const PLAN_DEFAULTS: Record<PlanTier, { monthlyQuota: number; watermarkExempt: boolean }> = {\n  FREE: { monthlyQuota: 5, watermarkExempt: false },\n  BASIC_50: { monthlyQuota: 50, watermarkExempt: true },\n  PLUS_200: { monthlyQuota: 200, watermarkExempt: true },\n  PRO_1000: { monthlyQuota: 1000, watermarkExempt: true },\n};\n\n/**\n * Map from Stripe Price ID (env) to PlanTier.\n * Configure in environment:\n *  - PRICE_ID_BASIC_50\n *  - PRICE_ID_PLUS_200\n *  - PRICE_ID_PRO_1000\n */\nexport function planFromStripePriceId(priceId: string | null | undefined): PlanTier {\n  const basic = process.env.PRICE_ID_BASIC_50;\n  const plus = process.env.PRICE_ID_PLUS_200;\n  const pro = process.env.PRICE_ID_PRO_1000;\n  if (priceId && basic && priceId === basic) return \"BASIC_50\";\n  if (priceId && plus && priceId === plus) return \"PLUS_200\";\n  if (priceId && pro && priceId === pro) return \"PRO_1000\";\n  return \"FREE\";\n}\n\n/**\n * Format current month in UTC as YYYY-MM\n */\nexport function monthUtc(date = new Date()): string {\n  const y = date.getUTCFullYear();\n  const m = (date.getUTCMonth() + 1).toString().padStart(2, \"0\");\n  return `${y}-${m}`;\n}\n\n/**\n * Ensure a quota row exists for the user for the given month.\n */\nexport async function getOrCreateQuota(userId: string, month = monthUtc()) {\n  let q = await prisma.quota.findUnique({\n    where: { userId_monthUtc: { userId, monthUtc: month } },\n  });\n  if (!q) {\n    q = await prisma.quota.create({\n      data: {\n        userId,\n        monthUtc: month,\n        freeRemaining: PLAN_DEFAULTS[\"FREE\"].monthlyQuota,\n        paidRemaining: 0,\n        watermarkExempt: false,\n      },\n    });\n  }\n  return q;\n}\n\n/**\n * Update user entitlements when subscription status/price changes.\n * Called from Stripe webhook handlers for checkout.session.completed,\n * customer.subscription.updated, customer.subscription.deleted, invoice.payment_failed, etc.\n *\n * Behavior:\n * - If active subscription with a recognized price:\n *    - Set tier to mapped tier; set paidRemaining to full tier quota for current month.\n *    - watermarkExempt = true for paid tiers.\n * - If no active subscription:\n *    - Revert to FREE: keep or reset freeRemaining (up to default), set paidRemaining = 0, watermarkExempt = false.\n *\n * Note: This function sets the \"starting point\" for the current month. Decrements occur per-generation elsewhere.\n */\nexport async function applyEntitlementsForSubscription(opts: {\n  userId: string;\n  status: \"trialing\" | \"active\" | \"past_due\" | \"canceled\" | \"unpaid\" | \"incomplete\" | \"incomplete_expired\" | \"paused\" | string;\n  stripeCustomerId?: string | null;\n  stripeSubscriptionId?: string | null;\n  stripePriceId?: string | null;\n  currentPeriodStart?: Date | null;\n  currentPeriodEnd?: Date | null;\n  anchorUtcDay?: number | null;\n}) {\n  const {\n    userId,\n    status,\n    stripeCustomerId,\n    stripeSubscriptionId,\n    stripePriceId,\n    currentPeriodStart,\n    currentPeriodEnd,\n    anchorUtcDay,\n  } = opts;\n\n  const tier = status === \"active\" || status === \"trialing\"\n    ? planFromStripePriceId(stripePriceId)\n    : \"FREE\";\n\n  // Upsert subscription record (metadata for audit)\n  await prisma.subscription.upsert({\n    where: { stripeSubscriptionId: stripeSubscriptionId ?? \"\" },\n    update: {\n      userId,\n      status,\n      planTier: tier,\n      stripeCustomerId: stripeCustomerId ?? undefined,\n      stripePriceId: stripePriceId ?? undefined,\n      currentPeriodStart: currentPeriodStart ?? undefined,\n      currentPeriodEnd: currentPeriodEnd ?? undefined,\n      anchorUtcDay: anchorUtcDay ?? undefined,\n    },\n    create: {\n      userId,\n      status,\n      planTier: tier,\n      stripeCustomerId: stripeCustomerId ?? undefined,\n      stripeSubscriptionId: stripeSubscriptionId ?? undefined,\n      stripePriceId: stripePriceId ?? undefined,\n      currentPeriodStart: currentPeriodStart ?? undefined,\n      currentPeriodEnd: currentPeriodEnd ?? undefined,\n      anchorUtcDay: anchorUtcDay ?? undefined,\n    },\n  });\n\n  // Bring quotas in sync for current month\n  const m = monthUtc();\n  const q = await getOrCreateQuota(userId, m);\n\n  if (tier === \"FREE\") {\n    // Revert to free entitlements\n    const targetFree = PLAN_DEFAULTS[\"FREE\"].monthlyQuota;\n    await prisma.quota.update({\n      where: { id: q.id },\n      data: {\n        // If user already used some free; do not increase above monthly default\n        freeRemaining: Math.min(q.freeRemaining ?? 0, targetFree),\n        paidRemaining: 0,\n        watermarkExempt: false,\n      },\n    });\n  } else {\n    const { monthlyQuota, watermarkExempt } = PLAN_DEFAULTS[tier];\n    await prisma.quota.update({\n      where: { id: q.id },\n      data: {\n        // Preserve remaining free, add paidRemaining fresh for the month anchor\n        paidRemaining: monthlyQuota,\n        watermarkExempt,\n      },\n    });\n  }\n\n  // Audit log\n  await prisma.auditLog.create({\n    data: {\n      userId,\n      action: \"ENTITLEMENTS_SYNC\",\n      contextJson: {\n        status,\n        stripeCustomerId,\n        stripeSubscriptionId,\n        stripePriceId,\n        resolvedTier: tier,\n        month: m,\n      },\n    },\n  });\n\n  return { tier };\n}\n\n/**\n * Decrement quota for a generation attempt. This is called from the generate route.\n * - Paid users consume from paidRemaining. When it's 0, fallback to freeRemaining if available (still watermarked=false as long as watermarkExempt is true).\n * - Free users consume from freeRemaining only. If 0, reject upstream.\n */\nexport async function decrementQuota(userId: string) {\n  const m = monthUtc();\n  const q = await getOrCreateQuota(userId, m);\n\n  if (q.paidRemaining > 0) {\n    return prisma.quota.update({\n      where: { id: q.id },\n      data: { paidRemaining: { decrement: 1 } },\n    });\n  }\n\n  if (q.freeRemaining > 0) {\n    return prisma.quota.update({\n      where: { id: q.id },\n      data: { freeRemaining: { decrement: 1 } },\n    });\n  }\n\n  throw new Error(\"Quota exceeded for the current month\");\n}\n\n/**\n * Helper to check whether visible watermark overlay should be applied.\n */\nexport async function isWatermarkExempt(userId: string) {\n  const q = await prisma.quota.findFirst({\n    where: { userId, monthUtc: monthUtc() },\n    select: { watermarkExempt: true },\n  });\n  return q?.watermarkExempt ?? false;\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/stripe/webhook/route\",\n        pathname: \"/api/stripe/webhook\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/stripe/webhook/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/stripe/webhook/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextResponse } from \"next/server\";\nimport Stripe from \"stripe\";\nimport prisma from \"@/lib/prisma\";\nimport { applyEntitlementsForSubscription } from \"@/lib/entitlements\";\nimport { tryAcquireIdempotency, stripeEventLockKey } from \"@/lib/redis\";\n\nexport const runtime = \"nodejs\";\n// Ensure this route is always executed on the server\nexport const dynamic = \"force-dynamic\";\n\n/**\n * Stripe client. Do not pin apiVersion here to avoid TS literal mismatch warnings.\n * The key must be set in STRIPE_SECRET_KEY.\n */\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY ?? \"\");\n\n/**\n * Helper: create-or-check idempotency using our WebhookEvent unique stripeEventId index.\n * Returns false if the event was already processed.\n */\nasync function recordWebhookEvent(event: Stripe.Event) {\n  try {\n    await prisma.webhookEvent.create({\n      data: {\n        type: event.type,\n        stripeEventId: event.id,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        payloadJson: event as unknown as any,\n        status: \"received\",\n      },\n    });\n    return true;\n  } catch {\n    // Unique violation means we already processed/recorded this event\n    return false;\n  }\n}\n\nasync function markProcessed(eventId: string, status: string) {\n  try {\n    await prisma.webhookEvent.update({\n      where: { stripeEventId: eventId },\n      data: { status, processedAt: new Date() },\n    });\n  } catch {\n    // best-effort\n  }\n}\n\n/**\n * Normalize plan + period details from a subscription id\n */\nasync function fetchSubscriptionDetails(subscriptionId: string) {\n  // Some Stripe SDK versions type retrieve() as Stripe.Response<Subscription>.\n  // Treat it as Subscription for convenience to avoid TS literal mismatches.\n  const subResp = await stripe.subscriptions.retrieve(subscriptionId);\n  const sub = subResp as unknown as Stripe.Subscription;\n\n  const price = sub.items.data[0]?.price?.id ?? null;\n  return {\n    status: sub.status,\n    stripeCustomerId: typeof sub.customer === \"string\" ? sub.customer : sub.customer?.id ?? null,\n    stripeSubscriptionId: sub.id,\n    stripePriceId: price,\n    currentPeriodStart:\n      // Stripe uses epoch seconds\n      (sub as unknown as { current_period_start?: number }).current_period_start ? new Date((sub as unknown as { current_period_start?: number }).current_period_start! * 1000) : null,\n    currentPeriodEnd:\n      (sub as unknown as { current_period_end?: number }).current_period_end ? new Date((sub as unknown as { current_period_end?: number }).current_period_end! * 1000) : null,\n    anchorUtcDay: 1, // design choice: quotas anchored to 1st of month UTC\n  } as const;\n}\n\n/**\n * Resolve a userId from our DB by Stripe customer id\n */\nasync function findUserIdByCustomerId(customerId: string | null | undefined) {\n  if (!customerId) return null;\n  const sub = await prisma.subscription.findFirst({\n    where: { stripeCustomerId: customerId },\n    select: { userId: true },\n  });\n  return sub?.userId ?? null;\n}\n\n/**\n * This webhook expects:\n * - STRIPE_WEBHOOK_SECRET set to your signing secret\n */\nexport async function POST(req: Request) {\n  const signature = req.headers.get(\"stripe-signature\");\n  if (!signature) {\n    return NextResponse.json({ error: \"Missing Stripe-Signature header\" }, { status: 400 });\n  }\n  const secret = process.env.STRIPE_WEBHOOK_SECRET;\n  if (!secret) {\n    return NextResponse.json({ error: \"Missing STRIPE_WEBHOOK_SECRET\" }, { status: 500 });\n  }\n\n  let event: Stripe.Event;\n  try {\n    const rawBody = await req.text();\n    event = stripe.webhooks.constructEvent(rawBody, signature, secret);\n  } catch (err: unknown) {\n    return NextResponse.json({ error: `Invalid webhook: ${err instanceof Error ? err.message : 'Unknown error'}` }, { status: 400 });\n  }\n\n  // Redis-based idempotency pre-check (fast path)\n  const acquired = await tryAcquireIdempotency(stripeEventLockKey(event.id));\n  if (!acquired) {\n    return NextResponse.json({ ok: true, deduped: true, via: \"redis\" });\n  }\n\n  // Idempotency recording\n  const isNew = await recordWebhookEvent(event);\n  if (!isNew) {\n    // Already processed\n    return NextResponse.json({ ok: true, deduped: true });\n  }\n\n  try {\n    switch (event.type) {\n      case \"checkout.session.completed\": {\n        const session = event.data.object as Stripe.Checkout.Session;\n        const subId = typeof session.subscription === \"string\" ? session.subscription : session.subscription?.id;\n        if (subId) {\n          const details = await fetchSubscriptionDetails(subId);\n          const userId = await findUserIdByCustomerId(details.stripeCustomerId);\n          if (userId) {\n            await applyEntitlementsForSubscription({\n              userId,\n              status: details.status,\n              stripeCustomerId: details.stripeCustomerId,\n              stripeSubscriptionId: details.stripeSubscriptionId,\n              stripePriceId: details.stripePriceId,\n              currentPeriodStart: details.currentPeriodStart,\n              currentPeriodEnd: details.currentPeriodEnd,\n              anchorUtcDay: details.anchorUtcDay,\n            });\n          }\n        }\n        break;\n      }\n\n      case \"customer.subscription.updated\":\n      case \"customer.subscription.deleted\": {\n        const sub = event.data.object as unknown as Stripe.Subscription & {\n          current_period_start?: number;\n          current_period_end?: number;\n        };\n        const priceId = sub.items?.data?.[0]?.price?.id ?? null;\n        const customerId = typeof sub.customer === \"string\" ? sub.customer : sub.customer?.id ?? null;\n        const userId = await findUserIdByCustomerId(customerId);\n        if (userId) {\n          await applyEntitlementsForSubscription({\n            userId,\n            status: sub.status,\n            stripeCustomerId: customerId,\n            stripeSubscriptionId: sub.id,\n            stripePriceId: priceId,\n            currentPeriodStart: sub.current_period_start ? new Date(sub.current_period_start * 1000) : null,\n            currentPeriodEnd: sub.current_period_end ? new Date(sub.current_period_end * 1000) : null,\n            anchorUtcDay: 1,\n          });\n        }\n        break;\n      }\n\n      case \"invoice.payment_failed\": {\n        // Some SDK versions type Invoice without 'subscription' field; widen to any\n        const invoice = event.data.object as unknown as {\n          subscription?: string | Stripe.Subscription | null;\n          customer?: string | Stripe.Customer | null;\n        };\n        const subId =\n          typeof invoice.subscription === \"string\"\n            ? invoice.subscription\n            : (invoice.subscription as Stripe.Subscription | undefined)?.id;\n\n        if (subId) {\n          const details = await fetchSubscriptionDetails(subId);\n          const userId = await findUserIdByCustomerId(details.stripeCustomerId);\n          if (userId) {\n            await applyEntitlementsForSubscription({\n              userId,\n              status: \"past_due\",\n              stripeCustomerId: details.stripeCustomerId,\n              stripeSubscriptionId: details.stripeSubscriptionId,\n              stripePriceId: details.stripePriceId,\n              currentPeriodStart: details.currentPeriodStart,\n              currentPeriodEnd: details.currentPeriodEnd,\n              anchorUtcDay: details.anchorUtcDay,\n            });\n          }\n        }\n        break;\n      }\n\n      default:\n        // No-op for unhandled events\n        break;\n    }\n\n    await markProcessed(event.id, \"processed\");\n    return NextResponse.json({ ok: true });\n  } catch (err: unknown) {\n    console.error(\"webhook processing error\", err);\n    await markProcessed(event.id, \"failed\");\n    return NextResponse.json({ error: err instanceof Error ? err.message : \"Webhook failed\" }, { status: 500 });\n  }\n}"],"names":[],"mappings":"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","ignoreList":[2]}